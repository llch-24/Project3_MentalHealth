---
title: "fixed-effects-model"
format: html
editor: visual
---

````{r, include = FALSE}
library(tidyverse)
library(janitor)
library(dplyr)
library(reshape2)

```

### Data Reading and Viewing

```{r, include = FALSE}
csv <- "analyticdata2024 - clean_data.csv"

mental <- read.csv(csv, header = TRUE)

### Clean data columns
mental %>% clean_names()
```

```{r}
ak <- mental %>% filter(State.Abbreviation == "AR" & !Name == "Arkansas") 
ak %>% head(10)
```

### From the previous file (Mental_Health), we selected model 7 as the best; however let's re-run all 10 models again to see if it maybe chooses a different model for this particular subset

### Model 1:

```{r}
mod1 <- lm(Poor.Mental.Health.Days.raw.value ~ (Frequent.Mental.Distress.raw.value * Food.Insecurity.raw.value) + 
             (Food.Insecurity.raw.value * Poor.Physical.Health.Days.raw.value * Poor.or.Fair.Health.raw.value * Physical.Inactivity.raw.value * Frequent.Mental.Distress.raw.value) + (Population.raw.value * Food.Insecurity.numerator)
             
             , data = ak)

mod1 %>% broom::glance()

#mod1$terms

#summary(mod1)
```

```{r}
#car:: vif(mod1)
```

### Model 2

```{r}
mod2 <- lm(Poor.Mental.Health.Days.raw.value ~ (Frequent.Mental.Distress.raw.value * Food.Insecurity.raw.value) + 
             (Food.Insecurity.raw.value * Poor.Physical.Health.Days.raw.value) + (Poor.or.Fair.Health.raw.value * Physical.Inactivity.raw.value) + Frequent.Mental.Distress.raw.value + (Population.raw.value * Food.Insecurity.numerator)
             
             , data = ak)

broom::glance(mod2)
```

```{r}
summary(mod2)
```

```{r}
library(ggfortify)
autoplot(mod2, ncol = 4)
```

### Model 3

```{r}
mod3 <- lm(Poor.Mental.Health.Days.raw.value ~ (Frequent.Mental.Distress.raw.value * Food.Insecurity.raw.value) + 
             (Food.Insecurity.raw.value * Poor.Physical.Health.Days.raw.value) + (Poor.or.Fair.Health.raw.value * Physical.Inactivity.raw.value) + Frequent.Mental.Distress.raw.value + (Population.raw.value * Food.Insecurity.numerator)
             
             , data = ak)

broom::glance(mod3)
```

```{r}
library(ggfortify)
autoplot(mod3, ncol = 4)
```

```{r}
coefplot::coefplot(mod3, intercept = FALSE)
```

### Model 4:

```{r}
mod4 <- lm(Poor.Mental.Health.Days.raw.value ~ (Frequent.Mental.Distress.raw.value * Food.Insecurity.raw.value) + 
             (Food.Insecurity.raw.value * Poor.Physical.Health.Days.raw.value) + (Poor.or.Fair.Health.raw.value * Physical.Inactivity.raw.value) + Frequent.Mental.Distress.raw.value
             
             , data = ak)

broom::glance(mod4)


#summary(mod4)
```

### Model 5

```{r}
mod5 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Food.Insecurity.raw.value
             
             , data = ak)

mod5 %>% broom::glance()

#mod1$terms

#summary(mod5)
```

### Model 6

```{r}
mod6 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Adult.Smoking.raw.value + Physical.Inactivity.raw.value + Adult.Obesity.raw.value

             
             , data = ak)

mod6 %>% broom::glance()

#mod1$terms

#summary(mod6)
```

```{r}
summary(mod6)
```

### Model 7 -\> includes high correlated repsonses and New negative correlations

```{r}
### Model 7
mod7 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Adult.Smoking.raw.value + Physical.Inactivity.raw.value + Adult.Obesity.raw.value + Excessive.Drinking.raw.value + Broadband.Access.raw.value + X..Asian.raw.value + Social.Associations.raw.value



             
             , data = ak)

mod7 %>% broom::glance()

#mod1$terms

#summary(mod6)
```

```{r}
car::vif(mod7)
```

### Model 8 -\> include interactive terms to help further reduce BIC and increase adjusted R\^2

```{r}
### Model 8
mod8 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Adult.Smoking.raw.value + Physical.Inactivity.raw.value + Adult.Obesity.raw.value + Excessive.Drinking.raw.value + Broadband.Access.raw.value + X..Asian.raw.value + Social.Associations.raw.value + Poor.Physical.Health.Days.raw.value + Poor.or.Fair.Health.raw.value

             , data = ak)

mod8 %>% broom::glance()

```

```{r}
summary(mod8)
```

```{r}
library(ggfortify)
autoplot(mod8, ncol = 4)
```

### Model 9 -\> adding ratio of pop to mental health providers from model 8

```{r}
### Model 9
mod9 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Adult.Smoking.raw.value + Physical.Inactivity.raw.value + Adult.Obesity.raw.value + Excessive.Drinking.raw.value + Broadband.Access.raw.value + X..Asian.raw.value + Social.Associations.raw.value + Poor.Physical.Health.Days.raw.value + Poor.or.Fair.Health.raw.value + Ratio.of.population.to.mental.health.providers.

             , data = ak)

mod9 %>% broom::glance()

```

### Combined Model Evaluation:

```{r}
extract_metrics <- function(mod, mod_name)
{
  broom::glance(mod) %>% mutate(mod_name = mod_name)
}


all_metrics <- purrr::map2_dfr(list(mod1, mod2, mod3, mod4, mod5, mod6, mod7, mod8, mod9),
                               as.character(1:9),
                               extract_metrics)

all_metrics %>% glimpse()
```

```{r, include = TRUE}
all_metrics %>%
  select(mod_name, df, adj.r.squared, BIC) %>%
  pivot_longer(!c("mod_name")) %>%
  mutate(mod_name = factor(mod_name, levels = 1:9)) %>%
  ggplot(mapping = aes(x = mod_name, y = value)) +
  geom_point(size = 3) +
  facet_wrap(~name, scales = "free_y", ncol = 3) +
  scale_x_discrete(breaks = as.character(1:9)) +
  theme_bw()
```



## California:

```{r}
ca <- mental %>% filter(State.Abbreviation == "CA" & !Name == "California") 
ca %>% head(10)
```



### Model 1

```{r}
mod1 <- lm(Poor.Mental.Health.Days.raw.value ~ (Frequent.Mental.Distress.raw.value * Food.Insecurity.raw.value) + 
             (Food.Insecurity.raw.value * Poor.Physical.Health.Days.raw.value * Poor.or.Fair.Health.raw.value * Physical.Inactivity.raw.value * Frequent.Mental.Distress.raw.value) + (Population.raw.value * Food.Insecurity.numerator)
             
             , data = ca)

mod1 %>% broom::glance()

#mod1$terms

#summary(mod1)
```

### Model 2

```{r}
mod2 <- lm(Poor.Mental.Health.Days.raw.value ~ (Frequent.Mental.Distress.raw.value * Food.Insecurity.raw.value) + 
             (Food.Insecurity.raw.value * Poor.Physical.Health.Days.raw.value) + (Poor.or.Fair.Health.raw.value * Physical.Inactivity.raw.value) + Frequent.Mental.Distress.raw.value + (Population.raw.value * Food.Insecurity.numerator)
             
             , data = ca)

broom::glance(mod2)
```

### Model 3

```{r}
mod3 <- lm(Poor.Mental.Health.Days.raw.value ~ (Frequent.Mental.Distress.raw.value * Food.Insecurity.raw.value) + 
             (Food.Insecurity.raw.value * Poor.Physical.Health.Days.raw.value) + (Poor.or.Fair.Health.raw.value * Physical.Inactivity.raw.value) + Frequent.Mental.Distress.raw.value + (Population.raw.value * Food.Insecurity.numerator)
             
             , data = ca)

broom::glance(mod3)
```

### Model 4:

```{r}
mod4 <- lm(Poor.Mental.Health.Days.raw.value ~ (Frequent.Mental.Distress.raw.value * Food.Insecurity.raw.value) + 
             (Food.Insecurity.raw.value * Poor.Physical.Health.Days.raw.value) + (Poor.or.Fair.Health.raw.value * Physical.Inactivity.raw.value) + Frequent.Mental.Distress.raw.value
             
             , data = ca)

broom::glance(mod4)


#summary(mod4)
```



```{r}
mod5 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Food.Insecurity.raw.value
             
             , data = ca)

mod5 %>% broom::glance()

#mod1$terms

#summary(mod5)
```

### Model 6

```{r}
mod6 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Adult.Smoking.raw.value + Physical.Inactivity.raw.value + Adult.Obesity.raw.value

             
             , data = ca)

mod6 %>% broom::glance()

#mod1$terms

#summary(mod6)
```

### Model 7 -\> includes high correlated repsonses and New negative correlations

```{r}
### Model 7
mod7 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Adult.Smoking.raw.value + Physical.Inactivity.raw.value + Adult.Obesity.raw.value + Excessive.Drinking.raw.value + Broadband.Access.raw.value + X..Asian.raw.value + Social.Associations.raw.value



             
             , data = ca)

mod7 %>% broom::glance()

#mod1$terms

#summary(mod6)
```

### Model 8 -\> include interactive terms to help further reduce BIC and increase adjusted R\^2

```{r}
### Model 8
mod8 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Adult.Smoking.raw.value + Physical.Inactivity.raw.value + Adult.Obesity.raw.value + Excessive.Drinking.raw.value + Broadband.Access.raw.value + X..Asian.raw.value + Social.Associations.raw.value + Poor.Physical.Health.Days.raw.value + Poor.or.Fair.Health.raw.value

             , data = ca)

mod8 %>% broom::glance()

```

### Model 9 -\> adding ratio of pop to mental health providers from model 8

```{r}
### Model 9
mod9 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Adult.Smoking.raw.value + Physical.Inactivity.raw.value + Adult.Obesity.raw.value + Excessive.Drinking.raw.value + Broadband.Access.raw.value + X..Asian.raw.value + Social.Associations.raw.value + Poor.Physical.Health.Days.raw.value + Poor.or.Fair.Health.raw.value + Ratio.of.population.to.mental.health.providers.

             , data = ca)

mod9 %>% broom::glance()

```


```{r}
extract_metrics <- function(mod, mod_name)
{
  broom::glance(mod) %>% mutate(mod_name = mod_name)
}


all_metrics <- purrr::map2_dfr(list(mod1, mod2, mod3, mod4, mod5, mod6, mod7, mod8, mod9),
                               as.character(1:9),
                               extract_metrics)

all_metrics %>% glimpse()
```


```{r, include = TRUE}
all_metrics %>%
  select(mod_name, df, adj.r.squared, BIC) %>%
  pivot_longer(!c("mod_name")) %>%
  mutate(mod_name = factor(mod_name, levels = 1:9)) %>%
  ggplot(mapping = aes(x = mod_name, y = value)) +
  geom_point(size = 3) +
  facet_wrap(~name, scales = "free_y", ncol = 3) +
  scale_x_discrete(breaks = as.character(1:9)) +
  theme_bw()
```

## North- Carolina:

```{r}
nc <- mental %>% filter(State.Abbreviation == "ND" & !Name == "North Dakota") 
nc %>% head(10)
```


### Model 1

```{r}
mod1 <- lm(Poor.Mental.Health.Days.raw.value ~ (Frequent.Mental.Distress.raw.value * Food.Insecurity.raw.value) + 
             (Food.Insecurity.raw.value * Poor.Physical.Health.Days.raw.value * Poor.or.Fair.Health.raw.value * Physical.Inactivity.raw.value * Frequent.Mental.Distress.raw.value) + (Population.raw.value * Food.Insecurity.numerator)
             
             , data = nc)

mod1 %>% broom::glance()

#mod1$terms

#summary(mod1)
```


### Model 2

```{r}
mod2 <- lm(Poor.Mental.Health.Days.raw.value ~ (Frequent.Mental.Distress.raw.value * Food.Insecurity.raw.value) + 
             (Food.Insecurity.raw.value * Poor.Physical.Health.Days.raw.value) + (Poor.or.Fair.Health.raw.value * Physical.Inactivity.raw.value) + Frequent.Mental.Distress.raw.value + (Population.raw.value * Food.Insecurity.numerator)
             
             , data = nc)

broom::glance(mod2)
```

### Model 3

```{r}
mod3 <- lm(Poor.Mental.Health.Days.raw.value ~ (Frequent.Mental.Distress.raw.value * Food.Insecurity.raw.value) + 
             (Food.Insecurity.raw.value * Poor.Physical.Health.Days.raw.value) + (Poor.or.Fair.Health.raw.value * Physical.Inactivity.raw.value) + Frequent.Mental.Distress.raw.value + (Population.raw.value * Food.Insecurity.numerator)
             
             , data = nc)

broom::glance(mod3)
```

### Model 4:

```{r}
mod4 <- lm(Poor.Mental.Health.Days.raw.value ~ (Frequent.Mental.Distress.raw.value * Food.Insecurity.raw.value) + 
             (Food.Insecurity.raw.value * Poor.Physical.Health.Days.raw.value) + (Poor.or.Fair.Health.raw.value * Physical.Inactivity.raw.value) + Frequent.Mental.Distress.raw.value
             
             , data = nc)

broom::glance(mod4)


#summary(mod4)
```



### Model 5

```{r}
mod5 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Food.Insecurity.raw.value
             
             , data = nc)

mod5 %>% broom::glance()

#mod1$terms

#summary(mod5)
```


### Model 6

```{r}
mod6 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Adult.Smoking.raw.value + Physical.Inactivity.raw.value + Adult.Obesity.raw.value

             
             , data = nc)

mod6 %>% broom::glance()

#mod1$terms

#summary(mod6)
```


### Model 7 -\> includes high correlated repsonses and New negative correlations

```{r}
### Model 7
mod7 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Adult.Smoking.raw.value + Physical.Inactivity.raw.value + Adult.Obesity.raw.value + Excessive.Drinking.raw.value + Broadband.Access.raw.value + X..Asian.raw.value + Social.Associations.raw.value



             
             , data = nc)

mod7 %>% broom::glance()

#mod1$terms

#summary(mod6)
```

### Model 8 -\> include interactive terms to help further reduce BIC and increase adjusted R\^2

```{r}
### Model 8
mod8 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Adult.Smoking.raw.value + Physical.Inactivity.raw.value + Adult.Obesity.raw.value + Excessive.Drinking.raw.value + Broadband.Access.raw.value + X..Asian.raw.value + Social.Associations.raw.value + Poor.Physical.Health.Days.raw.value + Poor.or.Fair.Health.raw.value

             , data = nc)

mod8 %>% broom::glance()

```

### Model 9 -\> adding ratio of pop to mental health providers from model 8

```{r}
### Model 9
mod9 <- lm(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Adult.Smoking.raw.value + Physical.Inactivity.raw.value + Adult.Obesity.raw.value + Excessive.Drinking.raw.value + Broadband.Access.raw.value + X..Asian.raw.value + Social.Associations.raw.value + Poor.Physical.Health.Days.raw.value + Poor.or.Fair.Health.raw.value + Ratio.of.population.to.mental.health.providers.

             , data = nc)

mod9 %>% broom::glance()

```

```{r}
extract_metrics <- function(mod, mod_name)
{
  broom::glance(mod) %>% mutate(mod_name = mod_name)
}


all_metrics <- purrr::map2_dfr(list(mod1, mod2, mod3, mod4, mod5, mod6, mod7, mod8, mod9),
                               as.character(1:9),
                               extract_metrics)

all_metrics %>% glimpse()
```

```{r, include = TRUE}
all_metrics %>%
  select(mod_name, df, adj.r.squared, BIC) %>%
  pivot_longer(!c("mod_name")) %>%
  mutate(mod_name = factor(mod_name, levels = 1:9)) %>%
  ggplot(mapping = aes(x = mod_name, y = value)) +
  geom_point(size = 3) +
  facet_wrap(~name, scales = "free_y", ncol = 3) +
  scale_x_discrete(breaks = as.character(1:9)) +
  theme_bw()
```

### Arkansas, North Dakota, and California -> Model 6 is the best



### Arkansas -> Model 6

### Cross Validation + Predictions

```{r}
library(caret)

# Split the data into 80% training and 20% test sets
set.seed(3239)
trainIndex <- createDataPartition(ak$Poor.Mental.Health.Days.raw.value, p = 0.8, list = FALSE)
trainData <- ak[trainIndex, ]
testData <- ak[-trainIndex, ]

train_control <- trainControl(method = "cv", number = 5)

tune_grid <- expand.grid(alpha = 1,  # Lasso regression
                         lambda = seq(0.001, 0.1, by = 0.001))

cv_mod_6 <- train(Poor.Mental.Health.Days.raw.value ~  Frequent.Mental.Distress.raw.value + Adult.Smoking.raw.value + Physical.Inactivity.raw.value + Adult.Obesity.raw.value, 
                  data = trainData, 
                  method = "glmnet", 
                  trControl = train_control, 
                  tuneGrid = tune_grid)

train_predictions <- predict(cv_mod_6, newdata = trainData)
test_predictions <- predict(cv_mod_6, newdata = testData)

train_r_squared <- cor(trainData$Poor.Mental.Health.Days.raw.value, train_predictions)^2
train_mae <- mean(abs(trainData$Poor.Mental.Health.Days.raw.value - train_predictions))
train_rmse <- sqrt(mean((trainData$Poor.Mental.Health.Days.raw.value - train_predictions) ^ 2)) 


test_r_squared <- cor(testData$Poor.Mental.Health.Days.raw.value, test_predictions)^2
test_mae <- mean(abs(testData$Poor.Mental.Health.Days.raw.value - test_predictions))
test_rmse <- sqrt(mean((testData$Poor.Mental.Health.Days.raw.value - test_predictions) ^ 2)) 


cat("Train R-squared:", train_r_squared, "\n")
cat("Train MAE:", train_mae, "\n")
cat("Train RMSE:", train_rmse, "\n")
cat("\n")

cat("Test R-squared:", test_r_squared, "\n")
cat("Test MAE:", test_mae, "\n")
cat("Test RMSE:", train_rmse, "\n")

ggplot() +
  geom_point(aes(x = trainData$Poor.Mental.Health.Days.raw.value, y = train_predictions, color = "Train"), alpha = 0.75) +
  geom_point(aes(x = testData$Poor.Mental.Health.Days.raw.value, y = test_predictions, color = "Test"), alpha = 0.75) +
  geom_abline(slope = 1, intercept = 0, color = "red") +
  ggtitle("Arkansas Actual Vs. Predicted Results") +
  xlab("Actual Values") +
  ylab("Predicted Values") +
  scale_color_manual(name = "Data", values = c("Train" = "blue", "Test" = "orange"))

```






